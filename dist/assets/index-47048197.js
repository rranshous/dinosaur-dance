var k=Object.defineProperty;var x=(m,t,e)=>t in m?k(m,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):m[t]=e;var c=(m,t,e)=>(x(m,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const a of n)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function e(n){const a={};return n.integrity&&(a.integrity=n.integrity),n.referrerPolicy&&(a.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?a.credentials="include":n.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function o(n){if(n.ep)return;n.ep=!0;const a=e(n);fetch(n.href,a)}})();class I{constructor(t){c(this,"recognition",null);c(this,"isListening",!1);c(this,"onCommandCallback");this.onCommandCallback=t,this.setupVoiceRecognition()}setupVoiceRecognition(){const t=window.SpeechRecognition||window.webkitSpeechRecognition;if(!t){console.warn("🎤 Speech recognition not supported in this browser.");return}this.recognition=new t,this.recognition.continuous=!0,this.recognition.interimResults=!1,this.recognition.maxAlternatives=1,this.recognition.lang="en-US",this.recognition.onresult=e=>{const o=e.results[e.results.length-1][0].transcript.toLowerCase().trim(),n=o.replace(/\b(the|a|an|please|can|you|could|would)\b/g,"").replace(/\s+/g," ").trim();console.log("🎤 Voice input:",o,"-> cleaned:",n),this.parseAndExecuteMultipleCommands(o,n)},this.recognition.onend=()=>{this.isListening=!1,this.updateVoiceIndicator(!1),console.log("🎤 Voice recognition stopped."),setTimeout(()=>{this.isListening||this.startListening()},1e3)},this.recognition.onerror=e=>{if(console.warn("🎤 Voice recognition error:",e.error),this.updateVoiceIndicator(!1),e.error==="not-allowed"){console.warn("🎤 Microphone access denied. Voice commands disabled.");return}setTimeout(()=>{this.isListening||this.startListening()},2e3)},console.log("🎤 Setting up voice recognition..."),this.startListening()}startListening(){if(this.recognition&&!this.isListening)try{this.isListening=!0,this.recognition.start(),console.log('🎤 Voice recognition started! Try singing: "dance party", "clear dance floor", or "restart the party"'),this.updateVoiceIndicator(!0)}catch(t){console.warn("🎤 Failed to start voice recognition:",t),this.isListening=!1,this.updateVoiceIndicator(!1)}}updateVoiceIndicator(t){const e=document.getElementById("voice-indicator");e&&(t?e.classList.add("listening"):e.classList.remove("listening"))}parseAndExecuteMultipleCommands(t,e){const o=["clear dance floor","dance party","restart the party"],n=[],a=(t.match(/dance/g)||[]).length,s=(t.match(/party/g)||[]).length;if(a>=2&&s>=1){const r=Math.min(a,5);console.log(`🎤 🎵 MUSICAL INTENSITY DETECTED! ${a} dances = ${r}x party!`),this.onCommandCallback("musical_dance_party",t),n.push(`musical_dance_party (${r}x)`)}const i=o.sort((r,l)=>l.length-r.length);for(const r of i){const l=this.countCommandInstances(t,e,r);if(l>0){for(let d=0;d<l;d++)setTimeout(()=>{this.onCommandCallback(r,t)},d*150);n.push(`${r} (${l}x)`)}}n.length>0?console.log(`🎤 ✨ MULTI-COMMAND EXECUTION: ${n.join(", ")}`):console.log("🎤 No recognized commands found in transcript")}countCommandInstances(t,e,o){let n=0;const a=(t.match(new RegExp(o.replace(/\s+/g,"\\s+"),"g"))||[]).length;n+=a;const s=(e.match(new RegExp(o.replace(/\s+/g,"\\s+"),"g"))||[]).length;if(s>a&&(n+=s-a),o==="dance party"){const i=(t.match(/\bdance\b/g)||[]).length,r=(t.match(/\bparty\b/g)||[]).length;i>1&&r>0&&(n=Math.max(n,Math.min(i,r)))}return n}getDanceIntensity(t){const e=(t.match(/dance/g)||[]).length;return Math.min(e,5)}}class S{constructor(t,e,o,n){c(this,"emojiSets");c(this,"currentSet");c(this,"plantedDinosaurs");c(this,"updateDancerCountCallback");this.emojiSets=t,this.currentSet=e,this.plantedDinosaurs=o,this.updateDancerCountCallback=n}createDanceParty(t=1){t>1?this.createMusicalDanceParty(t):this.createStandardDanceParty()}createStandardDanceParty(){const t=this.emojiSets[this.currentSet],e=Math.min(5,t.length),o=["arc","circle","line","random","spiral","wave","diamond","heart","star","zigzag"],n=o[Math.floor(Math.random()*o.length)];this.spawnDancers(t,e,n,1),console.log(`🎪 Dance party formation: ${n}! Each one is a surprise!`)}createMusicalDanceParty(t){const e=this.emojiSets[this.currentSet],o=Math.min(5,e.length),n=Math.min(o+(t-1)*3,12);console.log(`🎵🎪 MUSICAL DANCE PARTY! Intensity ${t}x = ${n} dancers!`);const a=["arc","circle","line","random","spiral","wave","diamond","heart","star","zigzag"],s=t>=4?["heart","star","spiral","circle"]:t>=3?["diamond","heart","star","wave","circle"]:a,i=s[Math.floor(Math.random()*s.length)];this.spawnDancers(e,n,i,t,!0)}spawnDancers(t,e,o,n=1,a=!1){for(let s=0;s<e;s++)setTimeout(()=>{const i=document.createElement("div");i.className="dinosaur",i.textContent=t[s%t.length];const r=this.calculatePosition(s,e,o,n);i.style.left=r.x+"px",i.style.top=r.y+"px";const l=a?Math.min(80+n*10,120):80;i.style.fontSize=l+"px",i.style.zIndex="500";const d=a?Math.max(.3,.8-n*.1):.8;i.style.animation=`dance ${d}s infinite alternate ease-in-out`,document.body.appendChild(i),i.setAttribute("data-dance-party","true"),a&&i.setAttribute("data-musical-intensity",n.toString()),this.plantedDinosaurs.push(i),this.updateDancerCountCallback()},s*(a?Math.max(80,200-e*10):150))}calculatePosition(t,e,o,n){let a,s;const i=Math.min(1+n*.2,1.8),r=20+n*10;switch(o){case"arc":const l=Math.min(400*i,window.innerWidth*.8);a=(window.innerWidth-l)/2+l/(e-1)*t,s=window.innerHeight/2+Math.sin(t/(e-1)*Math.PI)*60*i,a+=(Math.random()-.5)*r,s+=(Math.random()-.5)*r;break;case"circle":const h=120*i,p=t/e*Math.PI*2;a=window.innerWidth/2+Math.cos(p)*h,s=window.innerHeight/2+Math.sin(p)*h,a+=(Math.random()-.5)*r,s+=(Math.random()-.5)*r;break;case"spiral":const u=t/e*Math.PI*(3+n),g=40+t*(20*i);a=window.innerWidth/2+Math.cos(u)*g,s=window.innerHeight/2+Math.sin(u)*g;break;case"heart":const f=t/(e-1)*Math.PI*2,y=70*i;a=window.innerWidth/2+y*(16*Math.sin(f)**3)/16,s=window.innerHeight/2-y*(13*Math.cos(f)-5*Math.cos(2*f)-2*Math.cos(3*f)-Math.cos(4*f))/16,a+=(Math.random()-.5)*r,s+=(Math.random()-.5)*r;break;case"star":const M=130*i,w=t/e*Math.PI*2,D=t%2===0?M:M*.6;a=window.innerWidth/2+Math.cos(w)*D,s=window.innerHeight/2+Math.sin(w)*D,a+=(Math.random()-.5)*r,s+=(Math.random()-.5)*r;break;case"wave":const C=Math.min(500*i,window.innerWidth*.8);a=(window.innerWidth-C)/2+C/(e-1)*t,s=window.innerHeight/2+Math.sin(t/(e-1)*Math.PI*2)*80*i,a+=(Math.random()-.5)*r,s+=(Math.random()-.5)*r;break;default:const E=150*i,b=t/e*Math.PI*2+Math.random()*.5,v=Math.random()*E;a=window.innerWidth/2+Math.cos(b)*v,s=window.innerHeight/2+Math.sin(b)*v,a+=(Math.random()-.5)*r*2,s+=(Math.random()-.5)*r*2;break}return a=Math.max(50,Math.min(a,window.innerWidth-100)),s=Math.max(50,Math.min(s,window.innerHeight-100)),{x:a,y:s}}}class P{constructor(){c(this,"backgroundHue",200)}evolve(t){t%10===0&&(this.backgroundHue=(this.backgroundHue+5)%360);const e=25+Math.floor(t/20),o=88-Math.floor(t/30);document.body.style.transition="background 2s ease",document.body.style.background=`linear-gradient(135deg, 
            hsl(${this.backgroundHue}, ${Math.min(e,40)}%, ${Math.max(o,75)}%), 
            hsl(${(this.backgroundHue+25)%360}, ${Math.min(e+8,45)}%, ${Math.max(o+3,78)}%))`}reset(){this.backgroundHue=200,this.evolve(0)}makeUIElementsDance(t){if(t%15===0&&t>0){const e=document.querySelector(".title");e&&(e.classList.add("dancing"),setTimeout(()=>{e.classList.remove("dancing")},500))}}}class L{constructor(){c(this,"cursorDinosaur");c(this,"plantedDinosaurs",[]);c(this,"tinyDancerPile",[]);c(this,"isMouseDown",!1);c(this,"lastPlantTime",0);c(this,"brushDelay",100);c(this,"emojiSets",{prehistoric:["🦕","🦴","🐊","🐲","🦖","🐉"],reptiles:["🦎","🐍","🐢","🐊","🐸","🦕"],insects:["🦋","🐝","🐞","🦗","🕷️","🦂","🐛","🐜","🦟"],mammals:["🐨","🐼","🦘","🦥","🦦","🦨","🦔","🐿️","🐹","🐭","🐰","🦊"],predators:["🐺","🐻","🐯","🦁","🦈","🐉","🦖"],ocean:["🐙","🦑","🦐","🦀","🐡","🐠","🐟","🐬","🐳","🐋","🦈","🐚"],magical:["⭐","🌟","✨","💫","🔥","❄️","☄️","🌈","🎪"]});c(this,"currentSet","prehistoric");c(this,"setOrder",["prehistoric","reptiles","insects","mammals","predators","ocean","magical"]);c(this,"setIndex",0);c(this,"plantingsInCurrentSet",0);c(this,"plantingsBeforeSetChange",8);c(this,"dancerCount",0);c(this,"voiceController");c(this,"dancePartyManager");c(this,"backgroundManager");this.plantingsBeforeSetChange=this.getRandomEvolutionCount(),this.createCursorDinosaur(),this.setupEventListeners(),this.backgroundManager=new P,this.dancePartyManager=new S(this.emojiSets,this.currentSet,this.plantedDinosaurs,()=>this.updateCounter()),this.voiceController=new I(this.handleVoiceCommand.bind(this)),this.updateCounter(),this.backgroundManager.evolve(0)}createCursorDinosaur(){this.cursorDinosaur=document.createElement("div"),this.cursorDinosaur.className="dinosaur cursor-dinosaur",this.cursorDinosaur.textContent=this.getRandomDinosaur(),document.body.appendChild(this.cursorDinosaur)}handleVoiceCommand(t,e){switch(t){case"clear dance floor":console.log("🎤 Voice command: Clearing dance floor!"),this.clearDanceFloor();break;case"dance party":console.log("🎤 Voice command: Dance party demonstration!"),this.dancePartyManager.createDanceParty(1);break;case"restart the party":console.log("🎤 Voice command: Restarting the party!"),this.clearAllDinosaurs();break;case"musical_dance_party":const o=this.voiceController.getDanceIntensity(e);console.log(`🎤 Voice command: Musical dance party with intensity ${o}!`),this.dancePartyManager.createDanceParty(o);break}}getRandomDinosaur(){const t=this.emojiSets[this.currentSet];return t[Math.floor(Math.random()*t.length)]}getRandomEvolutionCount(){return Math.floor(Math.random()*7)+6}tryBrushStroke(t,e){Date.now()-this.lastPlantTime>=this.brushDelay&&this.plantDinosaur(t,e)}evolveBackground(){this.backgroundManager.evolve(this.dancerCount)}evolveToNextSet(){this.setIndex=(this.setIndex+1)%this.setOrder.length,this.currentSet=this.setOrder[this.setIndex],this.plantingsInCurrentSet=0,this.plantingsBeforeSetChange=this.getRandomEvolutionCount(),this.cursorDinosaur.textContent=this.getRandomDinosaur(),this.dancePartyManager=new S(this.emojiSets,this.currentSet,this.plantedDinosaurs,()=>this.updateCounter()),this.showSetChangeNotification()}showSetChangeNotification(){this.spawnCelebrationCreatures()}findNextPilePosition(){const t=window.innerWidth/2,e=Math.min(800,window.innerWidth*.9),o=window.innerHeight-35;if(this.tinyDancerPile.length===0)return{x:t+(Math.random()-.5)*150,y:o};const n=t+(Math.random()-.5)*e;let a=o,s=0;if(this.tinyDancerPile.forEach(i=>{const r=parseInt(i.style.left),l=parseInt(i.style.top),d=Math.abs(r-n);if(d<35&&(s++,s>=4&&d<18)){const h=l-18;h<a&&(a=h)}}),s<4){let i=n,r=s;for(let l=0;l<8;l++){const d=t+(Math.random()-.5)*e;let h=0;this.tinyDancerPile.forEach(p=>{const u=parseInt(p.style.left);Math.abs(u-d)<35&&h++}),h<r&&(i=d,r=h)}return{x:i,y:o}}return{x:n,y:a}}spawnCelebrationCreatures(){const t=this.emojiSets[this.currentSet],e=8;for(let o=0;o<e;o++)setTimeout(()=>{const n=document.createElement("div");n.className="dinosaur tiny-dancer",n.textContent=t[Math.floor(Math.random()*t.length)];const a=Math.random()*window.innerWidth,s=-50,i=this.findNextPilePosition();n.style.left=a+"px",n.style.top=s+"px",n.style.fontSize="24px",n.style.zIndex="50",n.setAttribute("data-tiny-dancer","true"),document.body.appendChild(n),setTimeout(()=>{n.style.transition="left 2.5s ease-out, top 2.5s ease-in",n.style.left=i.x+"px",n.style.top=i.y+"px"},100),setTimeout(()=>{n.classList.add("pile-dancer"),n.style.transition="none",this.tinyDancerPile.push(n)},2600)},o*300)}setupEventListeners(){document.addEventListener("mousemove",t=>{this.cursorDinosaur.style.left=`${t.clientX-30}px`,this.cursorDinosaur.style.top=`${t.clientY-30}px`,this.isMouseDown&&this.tryBrushStroke(t.clientX,t.clientY)}),document.addEventListener("mousedown",t=>{this.isMouseDown=!0,this.plantDinosaur(t.clientX,t.clientY)}),document.addEventListener("mouseup",()=>{this.isMouseDown=!1}),document.addEventListener("contextmenu",t=>{t.preventDefault(),this.randomDinosaurParty()}),document.addEventListener("mouseleave",()=>{this.cursorDinosaur.style.display="none"}),document.addEventListener("mouseenter",()=>{this.cursorDinosaur.style.display="block"})}plantDinosaur(t,e){const o=document.createElement("div");o.className="dinosaur planted-dinosaur",o.textContent=this.cursorDinosaur.textContent,o.style.left=`${t-30}px`,o.style.top=`${e-30}px`,o.setAttribute("data-planted","true"),o.setAttribute("data-creation-time",Date.now().toString());const n=Math.random()*20-10;o.style.transform=`rotate(${n}deg)`,document.body.appendChild(o),this.plantedDinosaurs.push(o),this.dancerCount++,this.updateCounter(),this.lastPlantTime=Date.now(),this.evolveBackground(),this.makeUIElementsDance(),this.plantingsInCurrentSet++,this.plantingsInCurrentSet>=this.plantingsBeforeSetChange?this.evolveToNextSet():this.cursorDinosaur.textContent=this.getRandomDinosaur(),this.celebratePlanting(o)}celebratePlanting(t){t.style.transform+=" scale(1.5)",setTimeout(()=>{t.style.transform=t.style.transform.replace(" scale(1.5)","")},200)}clearAllDinosaurs(){this.plantedDinosaurs.forEach(e=>e.remove()),this.plantedDinosaurs=[],this.dancerCount=0,document.querySelectorAll('[data-tiny-dancer="true"]').forEach(e=>e.remove()),this.tinyDancerPile=[],this.setIndex=0,this.currentSet=this.setOrder[0],this.plantingsInCurrentSet=0,this.plantingsBeforeSetChange=this.getRandomEvolutionCount(),this.cursorDinosaur.textContent=this.getRandomDinosaur(),this.backgroundManager.reset(),this.updateCounter()}randomDinosaurParty(){for(let t=0;t<5;t++){const e=Math.random()*(window.innerWidth-60)+30,o=Math.random()*(window.innerHeight-60)+30;setTimeout(()=>{this.plantDinosaur(e,o)},t*100)}}updateCounter(){const t=document.getElementById("dancer-count");if(t){t.textContent=this.dancerCount.toString();const e=t.parentElement;e&&(e.classList.add("celebrating"),setTimeout(()=>{e.classList.remove("celebrating")},400))}}makeUIElementsDance(){this.backgroundManager.makeUIElementsDance(this.dancerCount)}clearDanceFloor(){const t=this.plantedDinosaurs.slice(),e=50,o=60,n=Math.min(window.innerWidth,window.innerHeight)*.3;let a=0;t.forEach(s=>{const i=parseInt(s.style.left),r=parseInt(s.style.top),l=window.innerWidth/2,d=window.innerHeight/2,h=Math.sqrt(Math.pow(i-l,2)+Math.pow(r-d,2)),p=s.hasAttribute("data-dance-party");if(h<n||p){let u,g;switch(Math.floor(Math.random()*4)){case 0:u=e+Math.random()*(window.innerWidth-2*e-o),g=Math.random()*e;break;case 1:u=window.innerWidth-e-o+Math.random()*(e/2),g=e+Math.random()*(window.innerHeight-2*e-o);break;case 2:u=e+Math.random()*(window.innerWidth-2*e-o),g=window.innerHeight-e-o+Math.random()*(e/2);break;case 3:u=Math.random()*e,g=e+Math.random()*(window.innerHeight-2*e-o);break;default:u=i,g=r}s.style.transition="left 1.5s ease-out, top 1.5s ease-out",s.style.left=u+"px",s.style.top=g+"px",s.removeAttribute("data-dance-party"),s.removeAttribute("data-musical-intensity"),setTimeout(()=>{s.style.transition=""},1500),a++}}),console.log(`🎪 Cleared the dance floor! Moved ${a} dancers to the edges to make room for a solo performance!`)}}document.addEventListener("DOMContentLoaded",()=>{new L,console.log("🎨 Welcome to Dinosaur Dance Evolution - Voice-Controlled Painting Edition!"),console.log("• Move your mouse to see the cursor creature"),console.log("• Left click to place a single dancing creature"),console.log("• Hold and drag to paint continuous brush strokes!"),console.log("• Right click for an instant party (5 random creatures)!"),console.log("• Watch the background subtly evolve with your artwork"),console.log("🎤 VOICE COMMANDS: Sing naturally to control your art!"),console.log('  🎵 "dance party" - Creates a formation demonstration'),console.log('  🎵 "clear dance floor" - Moves dancers to edges for solo space'),console.log('  🎵 "restart the party" - Clears everything for a fresh canvas'),console.log("• Sets auto-evolve organically (6-12 plantings) for natural surprises!")});
